generator client {
  provider = "prisma-client-js"
  output   = "./../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  password   String      @unique
  name       String?
  roles      String[]
  post       Post[]
  feed       feed[]
  like       like[]
  comment    Comment[]
  shared     share[]
  tagFollows TagFollow[]

  followers Follow[] @relation("Followers")
  following Follow[] @relation("Following")
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime  @default(now())
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  tags      PostTag[]
  comments  Comment[]

  likes  like[]
  shares share[]
  feed   feed[]

  likeCount    Int @default(0)
  commentCount Int @default(0)
}

model Follow {
  id         Int @id @default(autoincrement())
  followerId Int
  followedId Int

  follower User @relation("Followers", fields: [followerId], references: [id])
  followed User @relation("Following", fields: [followedId], references: [id])

  createdAt DateTime @default(now())

  @@unique([followerId, followedId])
  @@index([followerId])
  @@index([followedId])
}

model Tag {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  posts     PostTag[]
  followers TagFollow[]
  createdAt DateTime    @default(now())
}

model PostTag {
  id Int @id @default(autoincrement())

  post   Post @relation(fields: [postId], references: [id])
  postId Int
  tag    Tag  @relation(fields: [tagId], references: [id])
  tagId  Int

  createdAt DateTime @default(now())

  @@unique([postId, tagId])
  @@index([postId])
  @@index([tagId])
}

model TagFollow {
  id Int @id @default(autoincrement())

  tag    Tag  @relation(fields: [tagId], references: [id])
  tagId  Int
  user   User @relation(fields: [userId], references: [id])
  userId Int

  createdAt DateTime @default(now())

  @@unique([tagId, userId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int

  @@index([postId])
  @@index([authorId])
}

model like {
  id        Int      @id @default(autoincrement())
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())

  @@unique([postId, userId])
  @@index([postId])
  @@index([userId])
}

model share {
  id        Int      @id @default(autoincrement())
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())

  @@unique([postId, userId])
}

model feed {
  id        Int      @id @default(autoincrement())
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())

  @@unique([postId, userId])
  @@index([userId, createdAt])
}
